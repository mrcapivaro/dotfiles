#!/usr/bin/env bash
set -euo pipefail

LOCAL_REPO="$HOME/Sync"
REMOTE_REPO="drive:Sync"

function main() {
    local subcommand="$1"
    shift
    case "$subcommand" in
        sync | s) sync "$@" ;;
        markdown | md) markdown "$@" ;;
        roam | r) roam "$@" ;;
        *)
            echo "$1 is not an option or subcommand."
            exit 1
            ;;
    esac
}

sync() {
    if ! ls "$LOCAL_REPO" >/dev/null 2>&1 || [[ -z $(ls "$LOCAL_REPO") ]]; then
        mkdir -p "$LOCAL_REPO"
        rclone \
            bisync \
            "$LOCAL_REPO" \
            "$REMOTE_REPO" \
            --create-empty-src-dirs \
            --compare size,modtime,checksum \
            --slow-hash-sync-only \
            --resilient \
            -MvP \
            --drive-skip-gdocs \
            --fix-case \
            --resync
    else
        rclone \
            bisync \
            "$LOCAL_REPO" \
            "$REMOTE_REPO" \
            --create-empty-src-dirs \
            --compare size,modtime,checksum \
            --slow-hash-sync-only \
            --resilient \
            -MvP \
            --drive-skip-gdocs \
            --force \
            --fix-case
    fi
}

roam() {
    if [[ "$@" == "" ]]; then
        local choosen_file="$(fd . "$LOCAL_REPO/roam" --hidden --type file | fzf --reverse)"
        $EDITOR "$choosen_file"
    else
        local name="$(echo "$@" | tr ' ' '-')"
        $EDITOR "$LOCAL_REPO/roam/$name.org"
    fi
}

markdown() {
    if ! command -v pandoc >/dev/null 2>&1; then
        echo "ERROR: pandoc not found."
        return 1
    fi
    local file="$(readlink -f "$1")"
    local filename="${file%%.*}"
    pandoc "$file" -f org -t markdown -o "$filename.md"
    # sed -i.bak \
    #     -e "s/{[^}]*}//g" \
    #     -e "s/^#\+/-/g" \
    #     -e "s/\[TODO\]/[ ]/g" \
    #     "$filename.md"
}

main "$@"

exit 0
